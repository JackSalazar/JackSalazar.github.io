[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Welcome!",
    "section": "",
    "text": "This is a collection of some projects I’ve worked on, alongside experiences going through my cyber security and programming journey.\nEnjoy :P"
  },
  {
    "objectID": "blog/dockerlamp/index.html",
    "href": "blog/dockerlamp/index.html",
    "title": "Dockerized LAMP Stack",
    "section": "",
    "text": "The goal provided is as follows:\nCreate a new machine and create a LAMP stack in a container. Any container will do, but for this documentation, docker will be used. For this, you will need the following applications:\nDocker: Container\nL inux: The operating system used, which in this case will be alpine\nA pache2: The http server to access the website in the first place\nM ySQL: The database which has all the data of the website\nP HP: The scripting language"
  },
  {
    "objectID": "blog/dockerlamp/index.html#installing-proper-packages",
    "href": "blog/dockerlamp/index.html#installing-proper-packages",
    "title": "Dockerized LAMP Stack",
    "section": "Installing proper Packages",
    "text": "Installing proper Packages\nFirst, modify /etc/apk/repositories\nvi /etc/apk/repositories\nIn there, add the following line\nhttps://dl-cdn.alpinelinux.org/alpine/v3.20/community\nSave, then proceed to update and upgrade the repositories\napk update && apk upgrade\nFrom here, you can now download docker\napk add docker"
  },
  {
    "objectID": "blog/dockerlamp/index.html#configuring-docker",
    "href": "blog/dockerlamp/index.html#configuring-docker",
    "title": "Dockerized LAMP Stack",
    "section": "Configuring Docker",
    "text": "Configuring Docker\nBy default, the service isn’t enabled nor started, so enter the following\nrc-update add docker default\nopenrc --service docker start\nNow, you could go through the pain and troubleshooting of making your own LAMP stack, or you can just take it from the dockerhub\ndocker pull fauria/lamp\ndocker run -itp 80:80 fauria/lamp /bin/bash"
  },
  {
    "objectID": "blog/dockerlamp/index.html#inside-the-container",
    "href": "blog/dockerlamp/index.html#inside-the-container",
    "title": "Dockerized LAMP Stack",
    "section": "Inside the Container",
    "text": "Inside the Container\nYou’ll find yourself in the docker container. From here, you need to start apache2\nservice apache2 start\nFrom here, you can access the website from the original machine’s ip"
  },
  {
    "objectID": "blog/markdown/index.html",
    "href": "blog/markdown/index.html",
    "title": "Markdown formatting",
    "section": "",
    "text": "Markdown is very simple, and many sites, like Reddit, Stackoverflow, or even Discord use some variation of markdown formatting.\nBelow is the Markdown from the presentation, copied and pasted here."
  },
  {
    "objectID": "blog/markdown/index.html#markdown",
    "href": "blog/markdown/index.html#markdown",
    "title": "Markdown formatting",
    "section": "Markdown",
    "text": "Markdown\n\nMarkdown is markup language\nEnables users to render formatted documents from plaintext\nMost static site generators use markdown"
  },
  {
    "objectID": "blog/markdown/index.html#markdown-code-snippets",
    "href": "blog/markdown/index.html#markdown-code-snippets",
    "title": "Markdown formatting",
    "section": "Markdown Code Snippets",
    "text": "Markdown Code Snippets\n\n`this is code snippets`\n\nThey result in unformated, monospace text:\n\nthis is code snippets"
  },
  {
    "objectID": "blog/markdown/index.html#markdown-basics",
    "href": "blog/markdown/index.html#markdown-basics",
    "title": "Markdown formatting",
    "section": "Markdown Basics",
    "text": "Markdown Basics\n*italics* = italics\n**bold** = bold\n[linktext](example.com) = linktext"
  },
  {
    "objectID": "blog/markdown/index.html#more-markdwon-basics",
    "href": "blog/markdown/index.html#more-markdwon-basics",
    "title": "Markdown formatting",
    "section": "More Markdwon Basics",
    "text": "More Markdwon Basics\n\n# top level header\n\ntop level header\n\n\n## lower level header\n\nlower level header"
  },
  {
    "objectID": "blog/markdown/index.html#useful-html-in-markdown",
    "href": "blog/markdown/index.html#useful-html-in-markdown",
    "title": "Markdown formatting",
    "section": "Useful HTML in Markdown",
    "text": "Useful HTML in Markdown\n&lt;br&gt; = line break\n\n&lt;details&gt;&lt;summary&gt;summary text&lt;/summary&gt;\n\ncollapsable content\n\n&lt;/details&gt;\n\n\n\nsummary text\n\ncollapsable content"
  },
  {
    "objectID": "blog/markdown/index.html#code-blocks",
    "href": "blog/markdown/index.html#code-blocks",
    "title": "Markdown formatting",
    "section": "Code Blocks",
    "text": "Code Blocks\nIt’s possible to do code blocks with langauge highlighting.\nThis:\n\\`\\`\\`{.python}\nprint(\"hellow world!\")\n\ndef testfunction(input):\n    print(\"Hi!\")\n\\`\\`\\`\nResults in:\nprint(\"hellow world!\")\n\ndef testfunction(input):\n    print(\"Hi!\")\nMany, many languages are supported and can be highlighted.\nImages:\n![alt text](https://quarto.org/quarto.png)\n\n\n\nalt text\n\n\nOf course, this is an external image. You an also store images in the repository, and then refer to them by the relative file path. Something like:\n![](../image.png)\nWhere .. goes up one directory, and then you can refer to files by their file path.\nMore information about markdown: https://quarto.org/docs/authoring/markdown-basics.html"
  },
  {
    "objectID": "blog/index.html",
    "href": "blog/index.html",
    "title": "Blog",
    "section": "",
    "text": "Dockerized LAMP Stack\n\n\n\nTutorial\n\n\n\nThis will guide you in creating a LAMP Stack inside Docker from scratch.\n\n\n\n\n\n\nJun 6, 2025\n\n\n\n\n\n\n\n\n\n\n\n\n\nMarkdown formatting\n\n\n\nWeb Info\n\nTutorial\n\n\n\ndescription\n\n\n\n\n\n\nFeb 23, 2024\n\n\n\n\n\n\nNo matching items"
  }
]